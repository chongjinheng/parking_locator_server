package com.softspace.pos.util;

import java.util.HashMap;
import java.util.Map;

import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.apache.velocity.app.VelocityEngine;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.MailException;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.mail.javamail.MimeMessagePreparator;
import org.springframework.stereotype.Service;
import org.springframework.ui.velocity.VelocityEngineUtils;

import com.softspace.pos.bean.EmailDetails;

/**
 * Setup email protocol and send email. Specify email to be sent according to mode<br>
 * Field: targetEmail, mode, List info
 * 
 * @author chongjinheng
 */
@Service
public class EmailService {

	@Autowired
	private JavaMailSender mailSender;

	@Autowired
	private VelocityEngine velocityEngine;

	private static final Logger logger = LoggerFactory.getLogger(EmailService.class);

	/**
	 * Setup email protocol and send email. Specify email to be sent according to mode<br>
	 * 
	 * @author chongjinheng
	 */
	public void sendEmail(final String targetEmail, final int mode, EmailDetails info) throws MailException {
		try {

			final Map<String, Object> model = new HashMap<String, Object>();
			model.put("targetEmail", targetEmail);
			model.put("info", info);

			@SuppressWarnings("unused")
			final String[] subject = { "Signup Successful", "Your new password", "You have successfully changed password", "Your receipt" };
			final String[] template = { "signUp.vm", "forgotPassword.vm", "", "changePassword.vm", "sendReceipt.vm" };

			MimeMessagePreparator preparator = new MimeMessagePreparator() {

				public void prepare(MimeMessage mimeMessage) throws Exception {
					MimeMessageHelper message = new MimeMessageHelper(mimeMessage, true);
					message.setTo(targetEmail);
					message.setFrom(new InternetAddress("jinheng.chong@softspace.com.my"));
					message.setSubject(subject[mode]);
					message.setText(
							VelocityEngineUtils.mergeTemplateIntoString(velocityEngine, "emailTemplates/" + template[mode], "UTF-8", model),
							true);
				}
			};
			this.mailSender.send(preparator);
			logger.info("Email Sent to " + targetEmail);

		} catch (MailException e) {
			logger.error("Error in sendEmail :" + e);
		}
	}
}
