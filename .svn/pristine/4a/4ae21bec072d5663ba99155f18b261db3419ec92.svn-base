<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">
	
	<!-- Component scan to find all Spring components -->
   	<tx:annotation-driven transaction-manager="transactionManager"/>
    <context:annotation-config />
	<context:property-placeholder location="classpath:settings.properties" />
	<util:properties id="emailSettings" location="classpath:emailContents.properties" />
	
	<!-- i18n & L10n -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>classpath:messages_common</beans:value>
				<beans:value>classpath:messages_error</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en" />
	</beans:bean>
	
	 <beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </beans:bean>
    
    <beans:bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<beans:property name="interceptors">
		<beans:list>
		<beans:ref bean="localeChangeInterceptor" />
		</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>
		
		<!--  Naming strategy  -->
		<beans:bean id = "posNaming" class = "com.softspace.pos.util.CustomNamingStrategy"></beans:bean>
	
	
	<!-- Hibernate SessionFactory -->
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="packagesToScan" value="com.softspace.pos.bean" />
	<!--  Naming strategy  -->
		<beans:property name="namingStrategy" ref="posNaming" />
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.format_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>
				<beans:prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</beans:prop>
				<beans:prop key="hibernate.default_batch_fetch_size">15</beans:prop>
				<beans:prop key="hibernate.use_sql_comments">true</beans:prop>
				<beans:prop key="hibernate.default-lazy">true</beans:prop>
				<beans:prop key="hibernate.order_updates">true</beans:prop>
				<beans:prop key="hibernate.connection.CharSet">utf8</beans:prop>
				<beans:prop key="hibernate.connection.characterEncoding">utf8</beans:prop>
				<beans:prop key="hibernate.connection.useUnicode">true</beans:prop>
				<beans:prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.import_files_sql_extractor">org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor</beans:prop>
				<beans:prop key="hibernate.jdbc.use_streams_for_binary">false</beans:prop>
				<beans:prop key="hibernate.connection.isolation">4096</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- Hibernate transaction management -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- START DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- the ResourceBundleViewResolver -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
 		 <property name="basename" value="views"/>
	</bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<property name="redirectHttp10Compatible" value="true" />
		<property name="redirectContextRelative" value="true" />
	</beans:bean>
	
	<!-- JavaMailSender -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="host" value="${mail.host}"/>
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
	 	  <props>
       	    <prop key="mail.smtp.auth">"true"</prop>
       	    <prop key="mail.smtp.starttls.enable">"true"</prop>
       	   </props>
		</property>
	</bean>
	
	<!--  Velocity Engine -->
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
    	<property name="velocityProperties">
       	 <props>
       	     <prop key="resource.loader">class</prop>
        	    <prop key="class.resource.loader.class">
           	     org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
         	   </prop>
      	  </props>
   	 </property>
	</bean>
	
	
	<context:component-scan base-package="com.softspace.pos" />
	
	<!-- END DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
</beans:beans>
