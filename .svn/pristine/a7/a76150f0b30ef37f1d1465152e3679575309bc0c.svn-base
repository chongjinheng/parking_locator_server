package com.softspace.test.dao;

import java.util.List;
import java.util.Properties;

import junit.framework.Assert;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import com.softspace.pos.DAO.DiscountDAO;
import com.softspace.pos.DAO.StoreDAO;
import com.softspace.pos.bean.Discount;
import com.softspace.pos.bean.Store;
import com.softspace.test.controller.BaseTestCase;

/**
 * A unit test for DiscountDao.
 * 
 * @author cylim
 */
public class DiscountDaoTest extends BaseTestCase {

	@Autowired
	private DiscountDAO discountDAO;

	@Autowired
	private Properties testValue;

	@Autowired
	private StoreDAO storeDAO;

	private Long storeID = 1l;
	private Long discountID = 1l;

	@Test
	public void testGetDiscountById() {
		Discount discount = discountDAO.getDiscountById(discountID, storeID);
		Assert.assertNotNull("Category with this id doesnt exists", discount);
		Assert.assertEquals("TooHandsome", discount.getName());
	}

	@Test
	public void testGetAllDiscountInStore() {
		List<Discount> discountList = discountDAO.getAllDiscountsInStore(storeID);
		Assert.assertNotNull("The list is null", discountList);
		Assert.assertTrue("no records inside list", discountList.size() > 0);
	}

	@Test
	public void testGetAllDiscountWOCustomInStore() {
		List<Discount> discountList = discountDAO.getAllDiscountsWOCustomInStore(storeID);
		Assert.assertNotNull("The list is null", discountList);
		Assert.assertTrue("no records inside list", discountList.size() > 0);
	}

	@Test
	public void testCreateCustomDiscount() {
		Discount discount = new Discount();
		discount.setName("Aarief");
		discount.setType("1");
		discount.setValue(93.3);
		discountDAO.createCustomDiscount(testValue.getProperty("userEmail"), discount);
	}

	@Test
	public void testCreateDiscount() {
		Store store = storeDAO.getStoreByStoreId(1l);
		Discount discount = new Discount();
		discount.setName("Yolo");
		discount.setType("1");
		discount.setValue(9.99);
		Long i = discountDAO.createDiscount(testValue.getProperty("userEmail"), store, discount);
		Assert.assertNotNull("Discount failed to create", discountDAO.getDiscountById(i, Long.valueOf(testValue.getProperty("storeID"))));

	}
}
